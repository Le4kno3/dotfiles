##########################################################################
#     _____  _____ __  __    ___    __    _______   _____ ___________    #
#    /__  / / ___// / / /   /   |  / /   /  _/   | / ___// ____/ ___/    #
#      / /  \__ \/ /_/ /   / /| | / /    / // /| | \__ \/ __/  \__ \     #
#     / /_____/ / __  /   / ___ |/ /____/ // ___ |___/ / /___ ___/ /     #
#    /____/____/_/ /_/   /_/  |_/_____/___/_/  |_/____/_____//____/      #
#                                                                        #
##########################################################################

#     ___                        __                                  
#    / (_)___  __  ___  __     _/_/  ____ ___  ____ __________  _____
#   / / / __ \/ / / / |/_/   _/_/   / __ `__ \/ __ `/ ___/ __ \/ ___/
#  / / / / / / /_/ />  <   _/_/    / / / / / / /_/ / /__/ /_/ (__  ) 
# /_/_/_/ /_/\__,_/_/|_|  /_/     /_/ /_/ /_/\__,_/\___/\____/____/  

# Open and edit ToDo list.
alias todo='vim "$HOME/Documents/personal/notes/todo.md"'

# Net.
alias serv="python -m SimpleHTTPServer"
alias wanip="curl -s http://whatismijnip.nl |cut -d' ' -f 5"

# Useful.
alias dev="ls /dev/"
alias pingit="ping -c3 www.google.com"
alias weather="curl -H \"Accept-Language: de\" wttr.in/Berlin"

# Creating license file containing unlicense.
alias unli="curl http://unlicense.org/UNLICENSE > LICENSE"

#     ____                 __  _                 
#    / __/_  ______  _____/ /_(_)___  ____  _____
#   / /_/ / / / __ \/ ___/ __/ / __ \/ __ \/ ___/
#  / __/ /_/ / / / / /__/ /_/ / /_/ / / / (__  ) 
# /_/  \__,_/_/ /_/\___/\__/_/\____/_/ /_/____/  

# Change to journal dir and create new journal.
mj() {
    journal_dir="$HOME/Documents/personal/notes/journal" 
    if [ ! "$PWD" = "$journal_dir" ]; then
        cd "$journal_dir" || exit 1
    fi
    cp dummy "$(date "+%Y-%m-%d").yaml"
    vim "$(date "+%Y-%m-%d").yaml"
}

# Get latest commit hash.
glc() {
    git log \
        --author 'oliverwiegers' \
        --oneline \
        --decorate \
        --graph \
        --all \
        | awk 'NR==1 {print $2}'
}

# Create and edit executeable python file.
pytest() {
	echo "#!/usr/bin/env python" > ./test.py
	vim ./test.py
	chmod 0700 ./test.py
}

# Create and edit executeable bash file.
tsh() {
	printf "#!/usr/bin/env sh\n" > ./test.sh
	vim ./test.sh
	chmod 0700 ./test.sh
}

# Create README for project.
mkread(){
	[ -f README.md ] && rm README.md
	touch README.md
	printf "# %s\n" "$(pwd | rev | cut -d'/' -f1 | rev)" >> README.md
	echo "Please insert simple description."
	read -r desc
    { printf "> %s\n" "${desc}";
	printf "## Requirements\n";
	printf "## Build\n";
	printf "## Install";
	printf "## Run\n"; } >> README.md

}

# Create new project.
mkpro() {
	[ "$#" -ne 1 ] && printf "Please provide name of project as argument.\nExiting." && return 1
	take "$1"
	unli
	mkread
	printf "Hey! Cool, you started another project\nPlease insert the name of the first file\n=>"
	read -r name
	touch "${name}"
}

#     ___                 
#    / (_)___  __  ___  __
#   / / / __ \/ / / / |/_/
#  / / / / / / /_/ />  <  
# /_/_/_/ /_/\__,_/_/|_|  

if [ "$(uname)" = "Linux" ]; then

	# Configure my system.
	alias reload='source $HOME/.zshrc && printf "Successfully reloaded zsh_config_files\n"'
	
	# Fun
	alias pac='. "${SCRIPT_DIR}/pacman.sh"'
	alias invade='. "${SCRIPT_DIR}/invaders.sh"'

    #     ____                 __  _                 
    #    / __/_  ______  _____/ /_(_)___  ____  _____
    #   / /_/ / / / __ \/ ___/ __/ / __ \/ __ \/ ___/
    #  / __/ /_/ / / / / /__/ /_/ / /_/ / / / (__  ) 
    # /_/  \__,_/_/ /_/\___/\__/_/\____/_/ /_/____/  

	# Change monitor settings.
	changemon() {
		PS3="What setup would you like to run?"
		select choice in "Internal monitor" "External monitor" "Both"; do
			case $choice in
				"Internal monitor" )
					xrandr --output LVDS1 --auto --output DP1 --off && sh $HOME/.fehbg
					return 0
					break
					;;
				"External monitor" )
					xrandr --output DP1 --auto --output LVDS1 --off && $HOME/.fehbg
					return 0
					break
					;;
				"Both" )
					xrandr --output DP1 --auto --primary --output LVDS1 --auto --noprimary --below DP1 && $HOME/.fehbg
					return 0
					break
					;;
				*)
					echo "Wrong input."
					return 1
					break
					;;
			esac
		done
	}
fi

#    ____ ___  ____ __________  _____
#   / __ `__ \/ __ `/ ___/ __ \/ ___/
#  / / / / / / /_/ / /__/ /_/ (__  ) 
# /_/ /_/ /_/\__,_/\___/\____/____/  

if [ "$(uname)" = "Darwin" ]; then
	if [ "$(whoami)" = owiegers ]; then
        alias jblu="caffeinate -i -- ssh -t jumpblu -- \"bash -c \\\"tmux -L tmux new-session -As work\\\"\""
        alias jbki="caffeinate -i -- ssh -t jumpbki -- \"bash -c \\\"tmux -L tmux new-session -As work\\\"\""
        
		hp() {
			git commit -am "$@"
			git pull
			git push
		}
	fi
fi
                                               
                                   
                                   
